1. O ponteiro p é sobrescrito na primeira vez e, por último, o código termina sem liberá-lo.

2. Valgrind:
==59973== Memcheck, a memory error detector
==59973== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==59973== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info
==59973== Command: ./c13
==59973== 
==59973== 
==59973== HEAP SUMMARY:
==59973==     in use at exit: 35 bytes in 2 blocks
==59973==   total heap usage: 3 allocs, 1 frees, 47 bytes allocated
==59973== 
==59973== LEAK SUMMARY:
==59973==    definitely lost: 35 bytes in 2 blocks
==59973==    indirectly lost: 0 bytes in 0 blocks
==59973==      possibly lost: 0 bytes in 0 blocks
==59973==    still reachable: 0 bytes in 0 blocks
==59973==         suppressed: 0 bytes in 0 blocks
==59973== Rerun with --leak-check=full to see details of leaked memory
==59973== 
==59973== For lists of detected and suppressed errors, rerun with: -s
==59973== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

3. Para corrigir é necessário liberar p antes de alocar sua memória novamente

4. O valgrind não identifica mais os erros.
==60359== Memcheck, a memory error detector
==60359== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==60359== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info
==60359== Command: ./c13correto
==60359== 
==60359== 
==60359== HEAP SUMMARY:
==60359==     in use at exit: 0 bytes in 0 blocks
==60359==   total heap usage: 3 allocs, 3 frees, 47 bytes allocated
==60359== 
==60359== All heap blocks were freed -- no leaks are possible
==60359== 
==60359== For lists of detected and suppressed errors, rerun with: -s
==60359== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)